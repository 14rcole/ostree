#!/usr/bin/python
#
# Copyright (C) 2011 Colin Walters <walters@verbum.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

import os,sys,re,subprocess,tempfile,shutil
import argparse

parser = argparse.ArgumentParser(description="Discover source metadata from current directory")
parser.add_argument('--meta')

args = parser.parse_args()

AUTODISCOVERED_KEYS = {}
KEYS = {}

def _register_discover_func(key, func):
    if key not in AUTODISCOVERED_KEYS:
        AUTODISCOVERED_KEYS[key] = []
    AUTODISCOVERED_KEYS[key].append(func)

def _discover_name_from_cwd():
    return os.path.basename(os.getcwd())
_register_discover_func('NAME', _discover_name_from_cwd)

def _discover_version_from_git():
    if os.path.isdir('.git'):
        try:
            version = subprocess.check_output(['git', 'describe'])
        except subprocess.CalledProcessError, e:
            version = subprocess.check_output(['git', 'rev-parse', 'HEAD'])
        return version.strip()
    return None
_register_discover_func('VERSION', _discover_version_from_git)

if args.meta:
    f = open(args.meta)
    for line in f.readlines():
        (k,v) = line.split('=', 1)
        KEYS[k.strip()] = v.strip()
    f.close()

for (key,hooks) in AUTODISCOVERED_KEYS.iteritems():
    if key in KEYS:
        continue
    for func in hooks:
        value = func()

        if value is None:
            continue

        KEYS[key] = value
        break

for (key,value) in KEYS.iteritems():
    print "%s=%s" % (key, value)

